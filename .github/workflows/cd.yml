name: CD

on:
  push:
    braches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SQLX_OFFLINE: true

    steps:
      - name: Install dependencies
        run: sudo apt-get install libczmq-dev

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkout all submodules
        run: git submodule update --init --recursive

      - name: Cache build artifacts
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target

      - name: Build
        run: cargo build --release

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Dockerize
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: galos-sync
          # IMAGE_TAG: ${{ github.sha }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG